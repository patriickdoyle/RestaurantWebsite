"use strict";
        function blogContent() {

        // ` this is a "back tick". Use it to define multi-line strings in JavaScript.
        var content = ` 
    
      <h4>My Web Development Experience</h4>
      <p>
          I have absolutely no experience in web development or design. However, I have created several 
          applications for Android devices, and I assumed this class would be similar (it is.) I am hoping to 
          develop my web application skills throughout this semester and obtain the elusive title of a Full Stack
          Developer.
      </p>
      <p>
          For this project, I plan on using a database implementation where users are customers and the other 
          table is the menu. Here are some of the fields I plan on using in this other table:
      </p>
    
      <h4>Database</h4>
      <ul>
          <li>URL pointing to an image of the food </li>
          <li>Price of food</li>
          <li>Date ordered</li>
          <li>Description of food experience</li>
          <li>1-5 star review</li>
      </ul>
   
    
      <h4>Homepage Homework</h4>
      <p>
          This homework has really not been too difficult for me thankfully. Having experience with Android 
          development has made this transition relatively smooth. At first, I was a little intimidated because 
          there were just a lot of concepts thrown at us from CSS, but as soon as I put my head down and started
          focusing on learning it, it was easy. 
      </p>
    
      <h4>JS UI Homework</h4>
      <p>
          For this Javascript UI homework, I believe I am doing alright with the requirements. My site is feeling a 
          little bland at the moment and I would like to change that, but based on the requirements listed I am not
          having too many problems. The only issue I have been having is finding where the links in the navbar are
          for styling purposes. All my links are readable, but I cannot figure out where to put the code to change
          font colors when hovering, clicked, etc. 
      </p>
    
    <h4>JS Object Homework</h4>
      <p>
          This homework was not too hard at all. The only issues I wound up having were a misunderstanding of
          the instructions listed in the document for the homework. I followed them in order and created my make
          function. I thought I was basically done after that. It then asked for a content function that did not
          take parameters to call the make function. It also said the navrouter had to call this function. I forgot
          some of the assignments we had done previously where we used the navrouter but after looking at them, I
          believe I figured out how to properly do this homework.
      </p>
            
    <h4>Database Homework</h4>
      <p>
          This homework was undoubtedly the easiest one for me thus far. I have used SQL pretty extensively at 
          the community college I attended before Temple, but we were creating all our tables the hard way. 
          MySQL workbench makes everything so easy. The hardest part about this assignment was probably using
          a SELECT statement merging two tables, but I was able to figure that out pretty quickly. 
          Click <a target="_blank" href='pics/Doyle_database.pdf'>here</a> to see my database document. 
      </p>
            
    <h4>ClickSort Homework</h4>
      <p>
          Around the time this homework was due, I started having some pretty rough luck in my personal life and
          I was faced with a personal situation that required a great deal of my time. Because of this I was not able 
          to complete this assignment on time. Dealing with the stress of this issue made it very hard for me to 
          complete my school work. However, I was able to eventually complete this homework. It had me stumped for
          a little bit until I was able to figure out what parts of the sample code related to each individual piece
          of the assignment. Once I had that figured out it was not too bad.
      </p>
            
    <h4>API Homework</h4>
      <p>
          I have never written server side code in my life so this homework was very interesting to me. 
          I think the most interesting/cool concept that I learned this week is how to write code that uses Ajax,
          Java, SQL, jsp, and json to create website content directly from a database. This project uses so many
          different web development technologies, its pretty cool seeing what is possible when you know how to use
          them all together. The hardest part was generating the errors for the document (Click <a target="_blank" href="Web_API_Hw.pdf">here</a> 
          to see my error document) because the error listed on the instructions do not entirely match the error
          messages generated by the code so I'm not 100% sure I have correct errors for the first 2 or 3.
          Click <a target="_blank" href="webAPIs/listUsersAPI.jsp">here</a> for my List Users Web API. 
          Click <a target="_blank" href="webAPIs/listFoodAPI.jsp">here</a> for my List Food API.
      </p>
    <h4>Tutorial: Proposal.pdf and Proof of Concept </h4>
      <p>    
          For my tutorial, I am creating a restaurant companion that displays a menu where items can be clicked
          to bring up modal boxes containing information about the item and a star rating out of 5 stars. You can
          add an item to your cart through the modal box and checkout. Clicking checkout will produce a summary
          of your cart including a total price and suggested tip.  
          Click <a target="_blank" href='tutorial/tutorialProposal.pdf'>here</a> to see my proposal.pdf.
          Click <a target="_blank" href='tutorial/poc.html'>here</a> to see my proofofconcept.html.
      </p>
    <h4>LogOn Homework </h4>
      <p>    
          The LogOn Homework this week was not too difficult for me. With the server side code already written from
          the previous lab, there really was not too much for me to do. Figuring out how to transfer the working 
          sample code into my project presented its challenges, but ultimately did not cause too much trouble. The 
          biggest problem I ran into was when I kept trying to sign into a user with the email 'user1' instead of 
          'email1'. I swore that user1 was the correct email but it was not. Once I recognized this is was smooth sailing.
          Click <a target="_blank" href='webAPIs/listUsersAPI.jsp'>here</a> to see a list of all users.
          Click <a target="_blank" href='webAPIs/logonAPI.jsp?email=email1&password=pass1'>here</a> to see a working 
          logon page.
          Click <a target="_blank" href='webAPIs/getProfileAPI.jsp'>here</a> to view your current profile.
          Click <a target="_blank" href='webAPIs/logoffAPI.jsp'>here</a> to log off.
      </p>
            
    `;
            var ele = document.createElement("div");
            ele.innerHTML = content;
            return ele;
        }